{
	"4.1.*": [
		{"message": "Added new SSH task runner tools.", "backport": null},
		{"message": "Allow before and after validation rules to reference other fields.", "backport": null},
		{"message": "Added splice method to Collection class.", "backport": null},
		{"message": "Added newest and oldest methods to query builder for timestamp short-hand queries.", "backport": null},
		{"message": "Rebuild the routing layer for speed and efficiency.", "backport": null},
		{"message": "Added morphToMany relation for polymorphic many-to-many relations.", "backport": null},
		{"message": "Make Boris available from Tinker command when available.", "backport": null},
		{"message": "Allow route names to be specified on resources.", "backport": null},
		{"message": "Collection `push` now appends. New `prepend` method on collections.", "backport": null},
		{"message": "Use environment for log file name.", "backport": null},
		{"message": "Use 'bit' as storage type for boolean on SQL Server.", "backport": null},
		{"message": "Added new 'firing' method to event dispatcher, deprecated passing of event as last parameter.", "backport": null},
		{"message": "Added QueryException with better formatted error messages.", "backport": null},
		{"message": "Added 'input' method to Router.", "backport": null},
		{"message": "Laravel now generates a single laravel.log file instead of many files.", "backport": null},
		{"message": "Added new 'tail' Artisan command for tailing remote log files.", "backport": null},
		{"message": "Support passing an array of files or dynamic arguments into File::delete.", "backport": null},
		{"message": "Support calling local controller methods as filters using @method syntax.", "backport": null},
		{"message": "Support passing Carbon instances into Cache put style methods.", "backport": null},
		{"message": "New SessionInterface implementation - moved away from Symfony's implementation.", "backport": null},
		{"message": "Native session driver has been replaced by 'file'. Specifying 'native' driver will just use the new file driver.", "backport": null},
		{"message": "Now using Stack\\Builder in Application::run.", "backport": null},
		{"message": "Cookies should now be accessed via Input::cookie - Cookie::get will continue to work for this release.", "backport": null},
		{"message": "When accessing cookies outside of a request context, you will need to decrypt them manually.", "backport": null},
		{"message": "When unit testing, the application instance is now refreshed once per test class - not every test.", "backport": null},
		{"message": "Added 'whereNotBetween' support to the query builder.", "backport": null},
		{"message": "Added App::middleware method to inject middlewares onto Stack.", "backport": null},
		{"message": "Deprecate 'close' application hooks, Stack middlewares should be used instead.", "backport": null},
		{"message": "A new packages directory within `lang` can now override package language files.", "backport": null},
		{"message": "Added new 'Auth::viaRemember method to determine if user was authed via 'remember me' cookie.", "backport": null},
		{"message": "Allow passing a view name to paginator's 'links' method.", "backport": null},
		{"message": "Added new hasManyThrough relationship type.", "backport": null},
		{"message": "Cloned Eloquent query builders now clone the underlying query builder.", "backport": null},
		{"message": "Allow for passing of custom attributes into Validator::make as fourth parameter.", "backport": null},
		{"message": "Allow comma delimited list of queues to be passed to queue:listen / queue:work to implement queue priority.", "backport": null},
		{"message": "When new bindings are added to container, old aliases bound to that key will now be dropped.", "backport": null},
		{"message": "Added new 'resolvable' and 'isAlias' methods to the container.", "backport": null},
		{"message": "BelongsTo relationships may now reference any key on parent model, not just primary key.", "backport": null},
		{"message": "HasOne, HasMany, and morph relationships may now use any key on parent model, not just primary key.", "backport": null},
		{"message": "Eloquent 'has' method will now maintain where clauses set on relation.", "backport": null},
		{"message": "New 'whereHas' and 'orWhereHas' Eloquent methods that allow extra constraints on 'has' type queries.", "backport": null},
		{"message": "New 'or' syntax in Blade echos can be used to build isset statements and echos.", "backport": null},
		{"message": "Allow the 'name' of belongsTo and belongsToMany to be explictly set.", "backport": null},
		{"message": "New Cache::tags feature that allows tagging cached items and flushing them by any tag.", "backport": null},
		{"message": "New FrameGuard middleware sends SAMEORIGIN X-Frame-Options header on each response by default.", "backport": null},
		{"message": "Added 'joinWhere' and 'leftJoinWhere' to query builder for joins with bindings.", "backport": null},
		{"message": "Added 'require_without_all' validation rule.", "backport": null},
		{"message": "Controller method is now passed to missingMethod as first parameter.", "backport": null},
		{"message": "New @append Blade directive for appending content onto a section.", "backport": null},
		{"message": "Session IDs are now automatically regenerated on login.", "backport": null},
		{"message": "Improve Auth::once to get rid of redundant database call.", "backport": null},
		{"message": "In addition to the 'remember' function, query builder now supports 'rememberForever'.", "backport": null},
		{"message": "Changes (breaking) to the return values of password reminder functions to provide more freedom to developer.", "backport": null},
		{"message": "Added new `auth:reminders-controller' command to generate an entire password reminder controller.", "backport": null},
		{"message": "New 'Password::validator' function that allows custom validation on passwords when resetting.", "backport": null},
		{"message": "Added support for checking job attempts to Iron.io queue jobs.", "backport": null},
		{"message": "Added support for releasing pushed Iron.io jobs back onto the queue.", "backport": null},
		{"message": "Allow strict mode option to be enabled for MySQL connections.", "backport": null},
		{"message": "Added 'wherePivot' and 'orWherePivot' methods to BelongsToMany relationship for convenience.", "backport": null},
		{"message": "Added automatic separation of read / write connections into database layer.", "backport": null},
		{"message": "Added automatic failed job handling for all queue drivers. New --tries switch for queue:listen and queue:work.", "backport": null},
		{"message": "Cache:add now returns true when the value is actually added. False is returned otherwise.", "backport": null},
		{"message": "Added merge, diff, and intersect to the Collection class.", "backport": null},
		{"message": "Added fragment method to paginator.", "backport": null},
		{"message": "Added 'renderSections' method to the View.", "backport": null},
		{"message": "Added pessimistic locking to query builder via 'lock', 'lockForUpdate', and 'sharedLock'.", "backport": null},
		{"message": "Closure can now be passed to Collection->first, functions similarly to array_first.", "backport": null},
		{"message": "Added Mail::failures to get the failed recipients for a message.", "backport": null},
		{"message": "Renamed `Model::tags($cacheTags)` to `Model::cacheTags($cacheTags)`", "backport": null},
		{"message": "Model::destroy now returns the total number of records deleted.", "backport": null},
		{"message": "Fixed relative URL generation.", "backport": null},
		{"message": "Added --seeder option to migrate:refresh Artisan command.", "backport": null},
		{"message": "Added 'cacheDriver' method to query builder.", "backport": null},
		{"message": "Added support for whereHas on belongsTo relationships.", "backport": null},
		{"message": "Added groupBy to Collection class.", "backport": null},
		{"message": "Added the View::composers method.", "backport": null},
		{"message": "Added new 'sometimes' validation rule short-cut to only run validation if rule is present.", "backport": null},
		{"message": "Duplicate service providers can't be registered without 'force' parameter.", "backport": null},
		{"message": "Added --lines option to the 'tail' Artisan command.", "backport": null},
		{"message": "Allow 'keytext' option to be set on Remote configuration.", "backport": null},
		{"message": "Added support for '.env' files in the project root directory for loading $_ENV and $_SERVER.", "backport": null},
		{"message": "Added 'getString' method to the SSH class to allow fetching remote file into a string.", "backport": null},
		{"message": "Added 'append_config' helper to assign high keys to configuration items.", "backport": null},
		{"message": "Nested where queries using Closures with Eloquent will now use Eloquent query builder.", "backport": null},
		{"message": "Allow passing a string into the 'sortBy' and 'sortByDesc' Collection methods.", "backport": null},
		{"message": "Added 'sum' method to the base Support collection.", "backport": null},
		{"message": "Return an empty Collection if the array given to Eloquent::find is empty.", "backport": null},
		{"message": "Added 'toBase' method to Eloquent collection.", "backport": null},
		{"message": "New 'Route::matched' event available.", "backport": null},
		{"message": "Added new 'selectRaw' method to query builder.", "backport": null},
		{"message": "Fixed required_with behavior to match required_without. Added required_with_any.", "backport": null},
		{"message": "Added ability to register custom message replacers with the Validator.", "backport": null},
		{"message": "Added support for 'char' columns in the Schema builder.", "backport": null},
		{"message": "Added 'forgetBeforeFilter' and 'forgetAfterFilter' to controllers.", "backport": null},
		{"message": "Allow container parameter overrides to be specified by argument name.", "backport": null},
		{"message": "BelongsToMany 'sync' method now returns array with information on what changed.", "backport": null},
		{"message": "TTR configuration option now supported on Beanstalk queues.", "backport": null},
		{"message": "Added support for eager loading of MorphTo relationships.", "backport": null}
	],
	"4.0.*": [
		{"message": "Added implode method to query builder and Collection class.", "backport": null},
		{"message": "Fixed bug that caused Model->push method to fail.", "backport": null},
		{"message": "Make session cookie HttpOnly by default.", "backport": null},
		{"message": "Added mail.pretend configuration option.", "backport": null},
		{"message": "Query elapsed time is now reported as float instead of string.", "backport": null},
		{"message": "Added Model::query method for generating an empty query builder.", "backport": null},
		{"message": "The @yield Blade directive now accepts a default value as the second argument.", "backport": null},
		{"message": "Fixed bug causing null to be passed to auth.logout event.", "backport": null},
		{"message": "Added polyfill for array_column forward compatibility.", "backport": null},
		{"message": "Passing NULL to validator exists rule as extra condition will do where null check.", "backport": null},
		{"message": "Auth::extend Closures should only return UserProviderInterface implementations.", "backport": null},
		{"message": "Make it easier to extend the Request class.", "backport": null},
		{"message": "Transparent support for APCu cache via 'apc' driver.", "backport": null},
		{"message": "Add morphs short-cut for adding polymorphic schema columns.", "backport": null},
		{"message": "Namespaces are now excluded from guessed model names.", "backport": null},
		{"message": "Added new --command option to command:make Artisan command.", "backport": null},
		{"message": "Added mediumText and longText to schema builder.", "backport": null},
		{"message": "Added support for macros on the Response class.", "backport": null},
		{"message": "Added support for view creators in addition to composers.", "backport": null},
		{"message": "Allow App::down to be bypassed if the event returns null.", "backport": null},
		{"message": "Added Request::format function to get human-readable expected Response format.", "backport": null},
		{"message": "Allow array sizes to be checked by validator.", "backport": null},
		{"message": "Added support for where conditions on unique validation rule.", "backport": null},
		{"message": "Restore method on Eloquent models now fires restoring and restored events.", "backport": null},
		{"message": "Fixed re-population of radio buttons and checkboxes in FormBuilder.", "backport": null},
		{"message": "Postgres ENUMs are now more truly implemented using 'check' constraints.", "backport": null},
		{"message": "Added selectMonth and selectYear to FormBuilder.", "backport": null},
		{"message": "Fix container resolution of default values for non-scalar dependencies.", "backport": null},
		{"message": "Allow optional path to be specified with calling _path helpers.", "backport": null},
		{"message": "Emulate nested transactions in the database connection layer.", "backport": null},
		{"message": "Added new appends property to Eloquent for adding to arrays and JSON.", "backport": null},
		{"message": "Allow connection to be configurable when using Redis based sessions.", "backport": null},
		{"message": "Allow passing DateTime objects to Queue::later.", "backport": null},
		{"message": "Added Queue::bulk method for pushing several jobs out at once.", "backport": null},
		{"message": "Added 'dates' property to Eloquent model for convenient setting of date columns.", "backport": null},
		{"message": "Added 'chunk' method to query builder and Eloquent for doing work on large result sets.", "backport": null},
		{"message": "Facades are now mockable without an application root.", "backport": null},
		{"message": "Data may now be dynamically bound to views via magic methods.", "backport": null},
		{"message": "Added support for XCache cache driver.", "backport": null},
		{"message": "Added 'env' command to get current environment.", "backport": null},
		{"message": "Added new --path and --name options to 'routes' Artisan command.", "backport": null},
		{"message": "Implement JSONable and Arrayable interfaces on Paginator.", "backport": null},
		{"message": "Foreign characters now supported in validation 'alpha' rules.", "backport": null},
		{"message": "Added 'prepend' method to Filesystem.", "backport": null},
		{"message": "Added 'reduce' collection to Collection, and 'min' and 'max' to Eloquent Collection.", "backport": null},
		{"message": "Added 'firstOrCreate' and 'firstOrNew' methods to Eloquent model.", "backport": null},
		{"message": "Added Redirect::away method to always redirect to external URL with no validation.", "backport": null},
		{"message": "Added 'double' method to Schema builder.", "backport": null},
		{"message": "Pass keys to 'map' method on Collection.", "backport": null},
		{"message": "Added 'orderByRaw' method to query builder.", "backport": null},
		{"message": "Added --bench option to controller:make Artisan command.", "backport": null},
		{"message": "Moved newPivot method into model for custom Pivot model instances.", "backport": null},
		{"message": "Added 'shared' method to View to pull a single shared item out.", "backport": null},
		{"message": "Added assertHasOldInput test assertion.", "backport": null},
		{"message": "Added slick new 'sometimes' method to Validator for conditionally adding rules.", "backport": null},
		{"message": "Added new '--sleep' option to queue:listen command to control time between jobs.", "backport": null},
		{"message": "Allow Blade processing on echos to be escaped using the @ sign.", "backport": null},
		{"message": "Allow custom messages to be registered when using Validator::extend.", "backport": null},
		{"message": "Added new auth:clear-reminders command for clearing expired password reminders.", "backport": null},
		{"message": "Added Cookie::queue method for creating cookies that are automatically attached to the final response.", "backport": null},
		{"message": "Allow environment to be checked via App::environment method.", "backport": null},
		{"message": "Add support for order by and limit on MySQL update queries.", "backport": null},
		{"message": "Tweak Container::resolve to accept a type, new resolvingAny method for all objects.", "backport": null},
		{"message": "Do not run queue workers while application is in maintenance mode.", "backport": null},
		{"message": "Values returned from scopes are now returned for chaining.", "backport": null},
		{"message": "New 'nullableTimestamps' method on Schema builder.", "backport": null},
		{"message": "Added 'extend' alias method for 'addConnector' in QueueManager class.", "backport": null},
		{"message": "Fixed exception handling bug that caused HTML to be dumped into console.", "backport": null}
	]
}
